package com.nongtri.app.l10n

enum class Language(val code: String, val displayName: String, val flag: String) {
    VIETNAMESE("vi", "Ti·∫øng Vi·ªát", "üáªüá≥"),
    ENGLISH("en", "English", "üá¨üáß")
}

interface Strings {
    // ============================================================================
    // APP IDENTITY
    // ============================================================================
    val appName: String
    val appTagline: String
    val aiAssistantName: String  // "N√¥ng Tr√≠ AI"

    // ============================================================================
    // LANGUAGE SELECTION SCREEN
    // ============================================================================
    val selectLanguage: String
    val selectLanguageBilingual: String  // "Select Language / Ch·ªçn ng√¥n ng·ªØ"
    val chooseYourLanguage: String
    val continue_: String

    // ============================================================================
    // CHAT SCREEN - TOP BAR & MENU
    // ============================================================================
    val chatTitle: String
    val menuConversations: String
    val menuNewChat: String
    val menuShareLocation: String
    val menuLanguageSection: String  // "Language" section header
    val menuThemeSection: String     // "Theme" section header

    // ============================================================================
    // NAVIGATION & COMMON ACTIONS
    // ============================================================================
    val back: String
    val close: String
    val cancel: String
    val ok: String
    val yes: String
    val no: String
    val retry: String
    val delete: String
    val send: String
    val confirm: String
    val dismiss: String

    // ============================================================================
    // WELCOME CARD
    // ============================================================================
    val welcomeMessage: String
    val welcomeDescription: String
    val buildingExperience: String  // "Building your experience..."

    // ============================================================================
    // STARTER QUESTIONS
    // ============================================================================
    val starterQuestionsHeaderVi: String  // "G·ª£i √Ω c√¢u h·ªèi"
    val starterQuestionsHeaderEn: String  // "Suggested questions"

    // ============================================================================
    // INPUT BAR
    // ============================================================================
    val typeMessage: String
    val listening: String
    val processing: String
    val transcribing: String
    val tapToSpeak: String
    val releaseToSend: String
    val slideToCancelHint: String  // "< Slide to cancel"

    // ============================================================================
    // MESSAGE TYPES & LABELS
    // ============================================================================
    val textMessage: String
    val voiceMessage: String
    val imageMessage: String
    val userLabel: String      // "You"
    val aiLabel: String         // "N√¥ng Tr√≠ AI"
    val followUpSectionHeader: String  // "üí° What's next?"

    // ============================================================================
    // MESSAGE ACTIONS
    // ============================================================================
    val actionCopy: String
    val actionShare: String
    val actionListen: String
    val actionListenError: String  // "Listen (Error - tap to retry)"
    val actionThumbsUp: String     // "Good response"
    val actionThumbsDown: String   // "Bad response"
    val shareAiResponse: String    // Share dialog title

    // ============================================================================
    // VOICE RECORDING
    // ============================================================================
    val recording: String          // "Recording..."
    val cancelRecording: String
    val sendRecording: String

    // ============================================================================
    // IMAGE ACTIONS
    // ============================================================================
    val attachImage: String
    val takePhoto: String
    val chooseFromGallery: String
    val camera: String
    val gallery: String
    val selectImageSource: String
    val captureNewPhoto: String
    val selectExistingPhoto: String
    val imageTipsText: String  // Photo tips for best results

    // ============================================================================
    // IMAGE PREVIEW & DIAGNOSIS
    // ============================================================================
    val confirmImage: String
    val askQuestionAboutPlant: String
    val defaultPlantQuestion: String  // "How is the health of my crop?"
    val sendForDiagnosis: String
    val diagnosisInfoText: String
    val analyzing: String
    val analyzingPlantHealth: String

    // ============================================================================
    // DIAGNOSIS RESPONSE
    // ============================================================================
    val healthStatus: String
    val detectedIssues: String
    val severityLabel: String
    val affectedLabel: String
    val growthStage: String
    val listenToAdvice: String

    // ============================================================================
    // DIAGNOSIS PENDING
    // ============================================================================
    val analyzingYourCrop: String
    val estimatedTime: String
    val notificationWhenReady: String
    val whatsHappening: String
    val diagnosisPendingExplanation: String
    val diagnosisPendingInfo: String
    val jobIdLabel: String
    val plantImageBeingAnalyzed: String  // Content description for diagnosis pending image

    // ============================================================================
    // TIMESTAMPS & RELATIVE TIME
    // ============================================================================
    val justNow: String
    val minutesAgo: String     // "m ago"
    val hoursAgo: String       // "h ago"
    val today: String
    val yesterday: String
    val daysAgo: String        // "days ago"
    val weeksAgo: String       // "weeks ago"
    val monthsAgo: String      // "months ago"

    // ============================================================================
    // CONVERSATIONS LIST SCREEN
    // ============================================================================
    val conversations: String
    val newConversation: String
    val noConversationsYet: String
    val noConversationsHint: String  // "Tap + to start a new conversation"
    val messageCountSuffix: String   // " messages"
    val deleteConversation: String
    val deleteConversationTitle: String
    val deleteConversationMessage: String
    val deleteConversationConfirm: String

    // ============================================================================
    // LOCATION
    // ============================================================================
    val location: String
    val shareLocation: String
    val updateLocation: String
    val shareGpsLocation: String
    val openSettings: String
    val detectedLocationIp: String    // "Detected Location (IP)"
    val mySharedLocationGps: String   // "My Shared Location (GPS)"
    val unableToDetectLocation: String
    val shareLocationDescription: String
    val locationHelpText: String

    // ============================================================================
    // PERMISSIONS - VOICE
    // ============================================================================
    val microphonePermission: String
    val voiceRecording: String
    val microphonePermissionSettingsPrompt: String
    val microphonePermissionPrompt: String
    val grantPermission: String
    val voiceMessageInfoText: String

    // ============================================================================
    // PERMISSIONS - CAMERA & PHOTOS
    // ============================================================================
    val cameraPhotoPermissions: String
    val cameraAccess: String
    val cameraPermissionSettingsPrompt: String
    val cameraPermissionGranted: String
    val cameraPermissionPrompt: String
    val photoLibraryAccess: String
    val photoLibraryPermissionSettingsPrompt: String
    val photoLibraryPermissionGranted: String
    val photoLibraryPermissionPrompt: String
    val imageUploadInfoText: String
    val permissionGrantedText: String

    // ============================================================================
    // THEME
    // ============================================================================
    val profile: String
    val settings: String
    val language: String
    val theme: String
    val light: String
    val dark: String
    val system: String
    val systemDefault: String
    val about: String
    val version: String

    // ============================================================================
    // SHARE
    // ============================================================================
    val shareResponse: String
    val shareAsText: String
    val shareAsImage: String
    val shareViaMessaging: String
    val saveOrShareScreenshot: String

    // ============================================================================
    // ERROR MESSAGES - GENERIC
    // ============================================================================
    val errorGeneric: String
    val errorNetwork: String
    val errorMicrophone: String
    val errorCamera: String
    val errorPermission: String
    val errorUnknown: String

    // ============================================================================
    // ERROR MESSAGES - SPECIFIC
    // ============================================================================
    val errorFailedToSendMessage: String
    val errorFailedToLoadConversations: String
    val errorFailedToCreateConversation: String
    val errorFailedToDeleteConversation: String
    val errorFailedToArchiveConversation: String
    val errorFailedToSubmitDiagnosis: String
    val errorImageTooLarge: String  // Needs size parameter
    val errorFailedToProcessImage: String
    val errorLoadingConversations: String

    // ============================================================================
    // VOICE MESSAGES
    // ============================================================================
    val audioNotAvailable: String
    val playVoiceMessage: String
    val pauseVoiceMessage: String
    val resumeVoiceMessage: String  // "Resume"

    // ============================================================================
    // FULLSCREEN IMAGE
    // ============================================================================
    val plantImage: String
    val plantImageFullscreen: String
    val healthLabel: String
    val issuesDetected: String
    val imageQualityLabel: String
    val noImage: String  // "No image"
    val cropLabel: String  // "Crop" for diagnosis response

    // ============================================================================
    // CONTENT DESCRIPTIONS (for accessibility)
    // ============================================================================
    val cdSettings: String
    val cdScrollToBottom: String
    val cdNewConversation: String
    val cdDeleteConversation: String
    val cdVoiceInput: String
    val cdAttachImage: String
    val cdCamera: String
    val cdGallery: String
    val cdSend: String
    val cdBack: String
    val cdClose: String
    val cdCancel: String
    val cdCopy: String
    val cdShare: String
    val cdPlay: String
    val cdPause: String
    val cdSelectedPlantImage: String
    val cdPlantImageFullscreen: String
    val cdCancelRecording: String
    val cdSendRecording: String
    val cdCrop: String
}

object EnglishStrings : Strings {
    // ============================================================================
    // APP IDENTITY
    // ============================================================================
    override val appName = "N√¥ng Tr√≠"
    override val appTagline = "AI Farming Assistant"
    override val aiAssistantName = "N√¥ng Tr√≠ AI"

    // ============================================================================
    // LANGUAGE SELECTION SCREEN
    // ============================================================================
    override val selectLanguage = "Select Language"
    override val selectLanguageBilingual = "Select Language / Ch·ªçn ng√¥n ng·ªØ"
    override val chooseYourLanguage = "Choose your preferred language"
    override val continue_ = "Continue"

    // ============================================================================
    // CHAT SCREEN - TOP BAR & MENU
    // ============================================================================
    override val chatTitle = "N√¥ng Tr√≠"
    override val menuConversations = "Conversations"
    override val menuNewChat = "New Chat"
    override val menuShareLocation = "Share Location"
    override val menuLanguageSection = "Language"
    override val menuThemeSection = "Theme"

    // ============================================================================
    // NAVIGATION & COMMON ACTIONS
    // ============================================================================
    override val back = "Back"
    override val close = "Close"
    override val cancel = "Cancel"
    override val ok = "OK"
    override val yes = "Yes"
    override val no = "No"
    override val retry = "Retry"
    override val delete = "Delete"
    override val send = "Send"
    override val confirm = "Confirm"
    override val dismiss = "Dismiss"

    // ============================================================================
    // WELCOME CARD
    // ============================================================================
    override val welcomeMessage = "Hello! I'm your AI farming assistant"
    override val welcomeDescription = "Ask me anything about crops, livestock, pest management, or farming techniques. I'm here to help!"
    override val buildingExperience = "Building your experience..."

    // ============================================================================
    // STARTER QUESTIONS
    // ============================================================================
    override val starterQuestionsHeaderVi = "G·ª£i √Ω c√¢u h·ªèi"
    override val starterQuestionsHeaderEn = "Suggested questions"

    // ============================================================================
    // INPUT BAR
    // ============================================================================
    override val typeMessage = "Type your message..."
    override val listening = "Listening..."
    override val processing = "Processing..."
    override val transcribing = "Transcribing..."
    override val tapToSpeak = "Tap to speak"
    override val releaseToSend = "Release to send"
    override val slideToCancelHint = "< Slide to cancel"

    // ============================================================================
    // MESSAGE TYPES & LABELS
    // ============================================================================
    override val textMessage = "Text message"
    override val voiceMessage = "Voice message"
    override val imageMessage = "Image message"
    override val userLabel = "You"
    override val aiLabel = "N√¥ng Tr√≠ AI"
    override val followUpSectionHeader = "üí° What's next?"

    // ============================================================================
    // MESSAGE ACTIONS
    // ============================================================================
    override val actionCopy = "Copy"
    override val actionShare = "Share"
    override val actionListen = "Listen"
    override val actionListenError = "Listen (Error - tap to retry)"
    override val actionThumbsUp = "Good response"
    override val actionThumbsDown = "Bad response"
    override val shareAiResponse = "Share AI Response"

    // ============================================================================
    // VOICE RECORDING
    // ============================================================================
    override val recording = "Recording..."
    override val cancelRecording = "Cancel"
    override val sendRecording = "Send recording"

    // ============================================================================
    // IMAGE ACTIONS
    // ============================================================================
    override val attachImage = "Attach image"
    override val takePhoto = "Take Photo"
    override val chooseFromGallery = "Choose from Gallery"
    override val camera = "Camera"
    override val gallery = "Gallery"
    override val selectImageSource = "Select Image Source"
    override val captureNewPhoto = "Capture a new photo of your plant"
    override val selectExistingPhoto = "Select an existing photo"
    override val imageTipsText = "For best results, take clear photos in good lighting with the plant filling most of the frame."

    // ============================================================================
    // IMAGE PREVIEW & DIAGNOSIS
    // ============================================================================
    override val confirmImage = "Confirm Image"
    override val askQuestionAboutPlant = "Ask a question about your plant:"
    override val defaultPlantQuestion = "How is the health of my crop?"
    override val sendForDiagnosis = "Send for Diagnosis"
    override val diagnosisInfoText = "The AI will analyze your plant image and provide health diagnosis with treatment recommendations."
    override val analyzing = "Analyzing..."
    override val analyzingPlantHealth = "Analyzing plant health..."

    // ============================================================================
    // DIAGNOSIS RESPONSE
    // ============================================================================
    override val healthStatus = "Health status"
    override val detectedIssues = "Detected Issues:"
    override val severityLabel = " ‚Ä¢ Severity: "
    override val affectedLabel = "Affected: "
    override val growthStage = "Growth Stage: "
    override val listenToAdvice = "Listen to advice"

    // ============================================================================
    // DIAGNOSIS PENDING
    // ============================================================================
    override val analyzingYourCrop = "Analyzing your crop photo..."
    override val estimatedTime = "Estimated time: 2-3 minutes"
    override val notificationWhenReady = "We'll notify you when it's ready"
    override val whatsHappening = "What's happening?"
    override val diagnosisPendingExplanation = "Our AI is carefully analyzing your crop photo to identify:\n‚Ä¢ Crop type\n‚Ä¢ Health status\n‚Ä¢ Any diseases or issues\n‚Ä¢ Recommendations for care"
    override val diagnosisPendingInfo = "You can close this app and continue your work. We'll send you a notification when the diagnosis is ready!"
    override val jobIdLabel = "Job ID: "
    override val plantImageBeingAnalyzed = "Plant image being analyzed"

    // ============================================================================
    // TIMESTAMPS & RELATIVE TIME
    // ============================================================================
    override val justNow = "Just now"
    override val minutesAgo = "m ago"
    override val hoursAgo = "h ago"
    override val today = "Today"
    override val yesterday = "Yesterday"
    override val daysAgo = " days ago"
    override val weeksAgo = " weeks ago"
    override val monthsAgo = " months ago"

    // ============================================================================
    // CONVERSATIONS LIST SCREEN
    // ============================================================================
    override val conversations = "Conversations"
    override val newConversation = "New Conversation"
    override val noConversationsYet = "No conversations yet"
    override val noConversationsHint = "Tap + to start a new conversation"
    override val messageCountSuffix = " messages"
    override val deleteConversation = "Delete conversation"
    override val deleteConversationTitle = "Delete Conversation"
    override val deleteConversationMessage = "Are you sure you want to delete this conversation? This action cannot be undone."
    override val deleteConversationConfirm = "Delete"

    // ============================================================================
    // LOCATION
    // ============================================================================
    override val location = "Location"
    override val shareLocation = "Share Location"
    override val updateLocation = "Update Location"
    override val shareGpsLocation = "Share GPS Location"
    override val openSettings = "Open Settings"
    override val detectedLocationIp = "Detected Location (IP)"
    override val mySharedLocationGps = "My Shared Location (GPS)"
    override val unableToDetectLocation = "Unable to determine location"
    override val shareLocationDescription = "Share your precise location for more accurate weather forecasts and farming advice."
    override val locationHelpText = "Your location helps provide accurate weather forecasts and farming advice for your area."

    // ============================================================================
    // PERMISSIONS - VOICE
    // ============================================================================
    override val microphonePermission = "Microphone Permission"
    override val voiceRecording = "Voice Recording"
    override val microphonePermissionSettingsPrompt = "Microphone permission is required to record voice messages. Please enable it in Settings."
    override val microphonePermissionPrompt = "Grant microphone permission to record and send voice messages to the AI assistant."
    override val grantPermission = "Grant Permission"
    override val voiceMessageInfoText = "Voice messages are transcribed using AI and sent to the assistant for farming advice."

    // ============================================================================
    // PERMISSIONS - CAMERA & PHOTOS
    // ============================================================================
    override val cameraPhotoPermissions = "Camera & Photo Permissions"
    override val cameraAccess = "Camera Access"
    override val cameraPermissionSettingsPrompt = "Camera permission is required to capture plant photos. Please enable it in Settings."
    override val cameraPermissionGranted = "Camera access granted ‚úì"
    override val cameraPermissionPrompt = "Allow camera access to capture photos of your plants for AI diagnosis."
    override val photoLibraryAccess = "Photo Library Access"
    override val photoLibraryPermissionSettingsPrompt = "Photo library permission is required to select existing images. Please enable it in Settings."
    override val photoLibraryPermissionGranted = "Photo library access granted ‚úì"
    override val photoLibraryPermissionPrompt = "Allow photo library access to select existing plant images for diagnosis."
    override val imageUploadInfoText = "Images are sent to our AI for plant health diagnosis and treatment recommendations."
    override val permissionGrantedText = "Permission granted"

    // ============================================================================
    // THEME
    // ============================================================================
    override val profile = "Profile"
    override val settings = "Settings"
    override val language = "Language"
    override val theme = "Theme"
    override val light = "Light"
    override val dark = "Dark"
    override val system = "System"
    override val systemDefault = "System Default"
    override val about = "About"
    override val version = "Version"

    // ============================================================================
    // SHARE
    // ============================================================================
    override val shareResponse = "Share Response"
    override val shareAsText = "Share as Text"
    override val shareAsImage = "Share as Image"
    override val shareViaMessaging = "Share via messaging apps"
    override val saveOrShareScreenshot = "Save or share as screenshot"

    // ============================================================================
    // ERROR MESSAGES - GENERIC
    // ============================================================================
    override val errorGeneric = "Something went wrong. Please try again."
    override val errorNetwork = "No internet connection. Please check your network."
    override val errorMicrophone = "Microphone access denied"
    override val errorCamera = "Camera access denied"
    override val errorPermission = "Permission required"
    override val errorUnknown = "Unknown error"

    // ============================================================================
    // ERROR MESSAGES - SPECIFIC
    // ============================================================================
    override val errorFailedToSendMessage = "Failed to send message"
    override val errorFailedToLoadConversations = "Failed to load conversations"
    override val errorFailedToCreateConversation = "Failed to create conversation"
    override val errorFailedToDeleteConversation = "Failed to delete conversation"
    override val errorFailedToArchiveConversation = "Failed to archive conversation"
    override val errorFailedToSubmitDiagnosis = "Failed to submit diagnosis"
    override val errorImageTooLarge = "Image is too large. Please try a smaller image."
    override val errorFailedToProcessImage = "Failed to process image. Please try again."
    override val errorLoadingConversations = "Error loading conversations"

    // ============================================================================
    // VOICE MESSAGES
    // ============================================================================
    override val audioNotAvailable = "‚ö† Audio not available"
    override val playVoiceMessage = "Play"
    override val pauseVoiceMessage = "Pause"
    override val resumeVoiceMessage = "Resume"

    // ============================================================================
    // FULLSCREEN IMAGE
    // ============================================================================
    override val plantImage = "Plant image"
    override val plantImageFullscreen = "Plant image fullscreen"
    override val healthLabel = "Health: "
    override val issuesDetected = " issue(s) detected"
    override val imageQualityLabel = "Image Quality: "
    override val noImage = "No image"
    override val cropLabel = "Crop"

    // ============================================================================
    // CONTENT DESCRIPTIONS (for accessibility)
    // ============================================================================
    override val cdSettings = "Settings"
    override val cdScrollToBottom = "Scroll to bottom"
    override val cdNewConversation = "New Conversation"
    override val cdDeleteConversation = "Delete conversation"
    override val cdVoiceInput = "Voice input"
    override val cdAttachImage = "Attach image"
    override val cdCamera = "Camera"
    override val cdGallery = "Gallery"
    override val cdSend = "Send"
    override val cdBack = "Back"
    override val cdClose = "Close"
    override val cdCancel = "Cancel"
    override val cdCopy = "Copy"
    override val cdShare = "Share"
    override val cdPlay = "Play"
    override val cdPause = "Pause"
    override val cdSelectedPlantImage = "Selected plant image"
    override val cdPlantImageFullscreen = "Plant image fullscreen"
    override val cdCancelRecording = "Cancel recording"
    override val cdSendRecording = "Send recording"
    override val cdCrop = "Crop"
}

object VietnameseStrings : Strings {
    // ============================================================================
    // APP IDENTITY
    // ============================================================================
    override val appName = "N√¥ng Tr√≠"
    override val appTagline = "Tr·ª£ l√Ω AI n√¥ng nghi·ªáp"
    override val aiAssistantName = "N√¥ng Tr√≠ AI"

    // ============================================================================
    // LANGUAGE SELECTION SCREEN
    // ============================================================================
    override val selectLanguage = "Ch·ªçn ng√¥n ng·ªØ"
    override val selectLanguageBilingual = "Select Language / Ch·ªçn ng√¥n ng·ªØ"
    override val chooseYourLanguage = "Ch·ªçn ng√¥n ng·ªØ ∆∞a th√≠ch c·ªßa b·∫°n"
    override val continue_ = "Ti·∫øp t·ª•c"

    // ============================================================================
    // CHAT SCREEN - TOP BAR & MENU
    // ============================================================================
    override val chatTitle = "N√¥ng Tr√≠"
    override val menuConversations = "Cu·ªôc tr√≤ chuy·ªán"
    override val menuNewChat = "Tr√≤ chuy·ªán m·ªõi"
    override val menuShareLocation = "Chia s·∫ª v·ªã tr√≠"
    override val menuLanguageSection = "Ng√¥n ng·ªØ"
    override val menuThemeSection = "Giao di·ªán"

    // ============================================================================
    // NAVIGATION & COMMON ACTIONS
    // ============================================================================
    override val back = "Quay l·∫°i"
    override val close = "ƒê√≥ng"
    override val cancel = "H·ªßy"
    override val ok = "OK"
    override val yes = "C√≥"
    override val no = "Kh√¥ng"
    override val retry = "Th·ª≠ l·∫°i"
    override val delete = "X√≥a"
    override val send = "G·ª≠i"
    override val confirm = "X√°c nh·∫≠n"
    override val dismiss = "B·ªè qua"

    // ============================================================================
    // WELCOME CARD
    // ============================================================================
    override val welcomeMessage = "Xin ch√†o! T√¥i l√† tr·ª£ l√Ω AI n√¥ng nghi·ªáp c·ªßa b·∫°n"
    override val welcomeDescription = "H·ªèi t√¥i b·∫•t c·ª© ƒëi·ªÅu g√¨ v·ªÅ c√¢y tr·ªìng, v·∫≠t nu√¥i, qu·∫£n l√Ω s√¢u b·ªánh ho·∫∑c k·ªπ thu·∫≠t canh t√°c. T√¥i ·ªü ƒë√¢y ƒë·ªÉ gi√∫p b·∫°n!"
    override val buildingExperience = "ƒêang x√¢y d·ª±ng tr·∫£i nghi·ªám..."

    // ============================================================================
    // STARTER QUESTIONS
    // ============================================================================
    override val starterQuestionsHeaderVi = "G·ª£i √Ω c√¢u h·ªèi"
    override val starterQuestionsHeaderEn = "Suggested questions"

    // ============================================================================
    // INPUT BAR
    // ============================================================================
    override val typeMessage = "Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n..."
    override val listening = "ƒêang nghe..."
    override val processing = "ƒêang x·ª≠ l√Ω..."
    override val transcribing = "ƒêang phi√™n √¢m..."
    override val tapToSpeak = "Ch·∫°m ƒë·ªÉ n√≥i"
    override val releaseToSend = "Th·∫£ ra ƒë·ªÉ g·ª≠i"
    override val slideToCancelHint = "< Vu·ªët ƒë·ªÉ h·ªßy"

    // ============================================================================
    // MESSAGE TYPES & LABELS
    // ============================================================================
    override val textMessage = "Tin nh·∫Øn vƒÉn b·∫£n"
    override val voiceMessage = "Tin nh·∫Øn tho·∫°i"
    override val imageMessage = "Tin nh·∫Øn h√¨nh ·∫£nh"
    override val userLabel = "B·∫°n"
    override val aiLabel = "N√¥ng Tr√≠ AI"
    override val followUpSectionHeader = "üí° Ti·∫øp theo?"

    // ============================================================================
    // MESSAGE ACTIONS
    // ============================================================================
    override val actionCopy = "Sao ch√©p"
    override val actionShare = "Chia s·∫ª"
    override val actionListen = "Nghe"
    override val actionListenError = "Nghe (L·ªói - ch·∫°m ƒë·ªÉ th·ª≠ l·∫°i)"
    override val actionThumbsUp = "Ph·∫£n h·ªìi t·ªët"
    override val actionThumbsDown = "Ph·∫£n h·ªìi kh√¥ng t·ªët"
    override val shareAiResponse = "Chia s·∫ª ph·∫£n h·ªìi AI"

    // ============================================================================
    // VOICE RECORDING
    // ============================================================================
    override val recording = "ƒêang ghi √¢m..."
    override val cancelRecording = "H·ªßy"
    override val sendRecording = "G·ª≠i b·∫£n ghi"

    // ============================================================================
    // IMAGE ACTIONS
    // ============================================================================
    override val attachImage = "ƒê√≠nh k√®m h√¨nh ·∫£nh"
    override val takePhoto = "Ch·ª•p ·∫£nh"
    override val chooseFromGallery = "Ch·ªçn t·ª´ th∆∞ vi·ªán"
    override val camera = "M√°y ·∫£nh"
    override val gallery = "Th∆∞ vi·ªán"
    override val selectImageSource = "Ch·ªçn ngu·ªìn h√¨nh ·∫£nh"
    override val captureNewPhoto = "Ch·ª•p ·∫£nh m·ªõi c√¢y tr·ªìng c·ªßa b·∫°n"
    override val selectExistingPhoto = "Ch·ªçn ·∫£nh c√≥ s·∫µn"
    override val imageTipsText = "ƒê·ªÉ c√≥ k·∫øt qu·∫£ t·ªët nh·∫•t, h√£y ch·ª•p ·∫£nh r√µ n√©t trong √°nh s√°ng t·ªët v·ªõi c√¢y tr·ªìng l·∫•p ƒë·∫ßy ph·∫ßn l·ªõn khung h√¨nh."

    // ============================================================================
    // IMAGE PREVIEW & DIAGNOSIS
    // ============================================================================
    override val confirmImage = "X√°c nh·∫≠n h√¨nh ·∫£nh"
    override val askQuestionAboutPlant = "ƒê·∫∑t c√¢u h·ªèi v·ªÅ c√¢y tr·ªìng c·ªßa b·∫°n:"
    override val defaultPlantQuestion = "T√¨nh tr·∫°ng s·ª©c kh·ªèe c·ªßa c√¢y tr·ªìng c·ªßa t√¥i nh∆∞ th·∫ø n√†o?"
    override val sendForDiagnosis = "G·ª≠i ƒë·ªÉ ch·∫©n ƒëo√°n"
    override val diagnosisInfoText = "AI s·∫Ω ph√¢n t√≠ch h√¨nh ·∫£nh c√¢y tr·ªìng c·ªßa b·∫°n v√† cung c·∫•p ch·∫©n ƒëo√°n s·ª©c kh·ªèe c√πng khuy·∫øn ngh·ªã ƒëi·ªÅu tr·ªã."
    override val analyzing = "ƒêang ph√¢n t√≠ch..."
    override val analyzingPlantHealth = "ƒêang ph√¢n t√≠ch s·ª©c kh·ªèe c√¢y tr·ªìng..."

    // ============================================================================
    // DIAGNOSIS RESPONSE
    // ============================================================================
    override val healthStatus = "T√¨nh tr·∫°ng s·ª©c kh·ªèe"
    override val detectedIssues = "V·∫•n ƒë·ªÅ ph√°t hi·ªán:"
    override val severityLabel = " ‚Ä¢ M·ª©c ƒë·ªô: "
    override val affectedLabel = "B·ªã ·∫£nh h∆∞·ªüng: "
    override val growthStage = "Giai ƒëo·∫°n sinh tr∆∞·ªüng: "
    override val listenToAdvice = "Nghe l·ªùi khuy√™n"

    // ============================================================================
    // DIAGNOSIS PENDING
    // ============================================================================
    override val analyzingYourCrop = "ƒêang ph√¢n t√≠ch ·∫£nh c√¢y tr·ªìng c·ªßa b·∫°n..."
    override val estimatedTime = "Th·ªùi gian ∆∞·ªõc t√≠nh: 2-3 ph√∫t"
    override val notificationWhenReady = "Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o khi s·∫µn s√†ng"
    override val whatsHappening = "ƒêi·ªÅu g√¨ ƒëang x·∫£y ra?"
    override val diagnosisPendingExplanation = "AI c·ªßa ch√∫ng t√¥i ƒëang c·∫©n th·∫≠n ph√¢n t√≠ch ·∫£nh c√¢y tr·ªìng c·ªßa b·∫°n ƒë·ªÉ x√°c ƒë·ªãnh:\n‚Ä¢ Lo·∫°i c√¢y tr·ªìng\n‚Ä¢ T√¨nh tr·∫°ng s·ª©c kh·ªèe\n‚Ä¢ B·ªánh ho·∫∑c v·∫•n ƒë·ªÅ n√†o\n‚Ä¢ Khuy·∫øn ngh·ªã chƒÉm s√≥c"
    override val diagnosisPendingInfo = "B·∫°n c√≥ th·ªÉ ƒë√≥ng ·ª©ng d·ª•ng n√†y v√† ti·∫øp t·ª•c c√¥ng vi·ªác. Ch√∫ng t√¥i s·∫Ω g·ª≠i th√¥ng b√°o khi ch·∫©n ƒëo√°n s·∫µn s√†ng!"
    override val jobIdLabel = "M√£ c√¥ng vi·ªác: "
    override val plantImageBeingAnalyzed = "H√¨nh ·∫£nh c√¢y tr·ªìng ƒëang ƒë∆∞·ª£c ph√¢n t√≠ch"

    // ============================================================================
    // TIMESTAMPS & RELATIVE TIME
    // ============================================================================
    override val justNow = "V·ª´a xong"
    override val minutesAgo = " ph√∫t tr∆∞·ªõc"
    override val hoursAgo = " gi·ªù tr∆∞·ªõc"
    override val today = "H√¥m nay"
    override val yesterday = "H√¥m qua"
    override val daysAgo = " ng√†y tr∆∞·ªõc"
    override val weeksAgo = " tu·∫ßn tr∆∞·ªõc"
    override val monthsAgo = " th√°ng tr∆∞·ªõc"

    // ============================================================================
    // CONVERSATIONS LIST SCREEN
    // ============================================================================
    override val conversations = "Cu·ªôc tr√≤ chuy·ªán"
    override val newConversation = "Cu·ªôc tr√≤ chuy·ªán m·ªõi"
    override val noConversationsYet = "Ch∆∞a c√≥ cu·ªôc tr√≤ chuy·ªán n√†o"
    override val noConversationsHint = "Nh·∫•n + ƒë·ªÉ b·∫Øt ƒë·∫ßu cu·ªôc tr√≤ chuy·ªán m·ªõi"
    override val messageCountSuffix = " tin nh·∫Øn"
    override val deleteConversation = "X√≥a cu·ªôc tr√≤ chuy·ªán"
    override val deleteConversationTitle = "X√≥a cu·ªôc tr√≤ chuy·ªán"
    override val deleteConversationMessage = "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a cu·ªôc tr√≤ chuy·ªán n√†y? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c."
    override val deleteConversationConfirm = "X√≥a"

    // ============================================================================
    // LOCATION
    // ============================================================================
    override val location = "V·ªã tr√≠"
    override val shareLocation = "Chia s·∫ª v·ªã tr√≠"
    override val updateLocation = "C·∫≠p nh·∫≠t v·ªã tr√≠"
    override val shareGpsLocation = "Chia s·∫ª v·ªã tr√≠ GPS"
    override val openSettings = "M·ªü c√†i ƒë·∫∑t"
    override val detectedLocationIp = "V·ªã tr√≠ ph√°t hi·ªán (IP)"
    override val mySharedLocationGps = "V·ªã tr√≠ chia s·∫ª c·ªßa t√¥i (GPS)"
    override val unableToDetectLocation = "Kh√¥ng th·ªÉ x√°c ƒë·ªãnh v·ªã tr√≠"
    override val shareLocationDescription = "Chia s·∫ª v·ªã tr√≠ ch√≠nh x√°c c·ªßa b·∫°n ƒë·ªÉ c√≥ d·ª± b√°o th·ªùi ti·∫øt v√† l·ªùi khuy√™n canh t√°c ch√≠nh x√°c h∆°n."
    override val locationHelpText = "V·ªã tr√≠ c·ªßa b·∫°n gi√∫p cung c·∫•p d·ª± b√°o th·ªùi ti·∫øt v√† l·ªùi khuy√™n canh t√°c ch√≠nh x√°c cho khu v·ª±c c·ªßa b·∫°n."

    // ============================================================================
    // PERMISSIONS - VOICE
    // ============================================================================
    override val microphonePermission = "Quy·ªÅn microphone"
    override val voiceRecording = "Ghi √¢m gi·ªçng n√≥i"
    override val microphonePermissionSettingsPrompt = "C·∫ßn c√≥ quy·ªÅn microphone ƒë·ªÉ ghi √¢m tin nh·∫Øn tho·∫°i. Vui l√≤ng b·∫≠t trong C√†i ƒë·∫∑t."
    override val microphonePermissionPrompt = "C·∫•p quy·ªÅn microphone ƒë·ªÉ ghi √¢m v√† g·ª≠i tin nh·∫Øn tho·∫°i cho tr·ª£ l√Ω AI."
    override val grantPermission = "C·∫•p quy·ªÅn"
    override val voiceMessageInfoText = "Tin nh·∫Øn tho·∫°i ƒë∆∞·ª£c phi√™n √¢m b·∫±ng AI v√† g·ª≠i ƒë·∫øn tr·ª£ l√Ω ƒë·ªÉ nh·∫≠n l·ªùi khuy√™n canh t√°c."

    // ============================================================================
    // PERMISSIONS - CAMERA & PHOTOS
    // ============================================================================
    override val cameraPhotoPermissions = "Quy·ªÅn m√°y ·∫£nh & ·∫£nh"
    override val cameraAccess = "Truy c·∫≠p m√°y ·∫£nh"
    override val cameraPermissionSettingsPrompt = "C·∫ßn c√≥ quy·ªÅn m√°y ·∫£nh ƒë·ªÉ ch·ª•p ·∫£nh c√¢y tr·ªìng. Vui l√≤ng b·∫≠t trong C√†i ƒë·∫∑t."
    override val cameraPermissionGranted = "ƒê√£ c·∫•p quy·ªÅn m√°y ·∫£nh ‚úì"
    override val cameraPermissionPrompt = "Cho ph√©p truy c·∫≠p m√°y ·∫£nh ƒë·ªÉ ch·ª•p ·∫£nh c√¢y tr·ªìng c·ªßa b·∫°n cho ch·∫©n ƒëo√°n AI."
    override val photoLibraryAccess = "Truy c·∫≠p th∆∞ vi·ªán ·∫£nh"
    override val photoLibraryPermissionSettingsPrompt = "C·∫ßn c√≥ quy·ªÅn th∆∞ vi·ªán ·∫£nh ƒë·ªÉ ch·ªçn h√¨nh ·∫£nh c√≥ s·∫µn. Vui l√≤ng b·∫≠t trong C√†i ƒë·∫∑t."
    override val photoLibraryPermissionGranted = "ƒê√£ c·∫•p quy·ªÅn th∆∞ vi·ªán ·∫£nh ‚úì"
    override val photoLibraryPermissionPrompt = "Cho ph√©p truy c·∫≠p th∆∞ vi·ªán ·∫£nh ƒë·ªÉ ch·ªçn h√¨nh ·∫£nh c√¢y tr·ªìng c√≥ s·∫µn cho ch·∫©n ƒëo√°n."
    override val imageUploadInfoText = "H√¨nh ·∫£nh ƒë∆∞·ª£c g·ª≠i ƒë·∫øn AI c·ªßa ch√∫ng t√¥i ƒë·ªÉ ch·∫©n ƒëo√°n s·ª©c kh·ªèe c√¢y tr·ªìng v√† khuy·∫øn ngh·ªã ƒëi·ªÅu tr·ªã."
    override val permissionGrantedText = "ƒê√£ c·∫•p quy·ªÅn"

    // ============================================================================
    // THEME
    // ============================================================================
    override val profile = "H·ªì s∆°"
    override val settings = "C√†i ƒë·∫∑t"
    override val language = "Ng√¥n ng·ªØ"
    override val theme = "Giao di·ªán"
    override val light = "S√°ng"
    override val dark = "T·ªëi"
    override val system = "H·ªá th·ªëng"
    override val systemDefault = "M·∫∑c ƒë·ªãnh h·ªá th·ªëng"
    override val about = "Gi·ªõi thi·ªáu"
    override val version = "Phi√™n b·∫£n"

    // ============================================================================
    // SHARE
    // ============================================================================
    override val shareResponse = "Chia s·∫ª ph·∫£n h·ªìi"
    override val shareAsText = "Chia s·∫ª d∆∞·ªõi d·∫°ng vƒÉn b·∫£n"
    override val shareAsImage = "Chia s·∫ª d∆∞·ªõi d·∫°ng h√¨nh ·∫£nh"
    override val shareViaMessaging = "Chia s·∫ª qua ·ª©ng d·ª•ng nh·∫Øn tin"
    override val saveOrShareScreenshot = "L∆∞u ho·∫∑c chia s·∫ª ·∫£nh ch·ª•p m√†n h√¨nh"

    // ============================================================================
    // ERROR MESSAGES - GENERIC
    // ============================================================================
    override val errorGeneric = "ƒê√£ x·∫£y ra l·ªói. Vui l√≤ng th·ª≠ l·∫°i."
    override val errorNetwork = "Kh√¥ng c√≥ k·∫øt n·ªëi internet. Vui l√≤ng ki·ªÉm tra m·∫°ng c·ªßa b·∫°n."
    override val errorMicrophone = "Quy·ªÅn microphone b·ªã t·ª´ ch·ªëi"
    override val errorCamera = "Quy·ªÅn m√°y ·∫£nh b·ªã t·ª´ ch·ªëi"
    override val errorPermission = "Y√™u c·∫ßu quy·ªÅn"
    override val errorUnknown = "L·ªói kh√¥ng x√°c ƒë·ªãnh"

    // ============================================================================
    // ERROR MESSAGES - SPECIFIC
    // ============================================================================
    override val errorFailedToSendMessage = "Kh√¥ng g·ª≠i ƒë∆∞·ª£c tin nh·∫Øn"
    override val errorFailedToLoadConversations = "Kh√¥ng t·∫£i ƒë∆∞·ª£c cu·ªôc tr√≤ chuy·ªán"
    override val errorFailedToCreateConversation = "Kh√¥ng t·∫°o ƒë∆∞·ª£c cu·ªôc tr√≤ chuy·ªán"
    override val errorFailedToDeleteConversation = "Kh√¥ng x√≥a ƒë∆∞·ª£c cu·ªôc tr√≤ chuy·ªán"
    override val errorFailedToArchiveConversation = "Kh√¥ng l∆∞u tr·ªØ ƒë∆∞·ª£c cu·ªôc tr√≤ chuy·ªán"
    override val errorFailedToSubmitDiagnosis = "Kh√¥ng g·ª≠i ƒë∆∞·ª£c ch·∫©n ƒëo√°n"
    override val errorImageTooLarge = "H√¨nh ·∫£nh qu√° l·ªõn. Vui l√≤ng th·ª≠ h√¨nh ·∫£nh nh·ªè h∆°n."
    override val errorFailedToProcessImage = "Kh√¥ng x·ª≠ l√Ω ƒë∆∞·ª£c h√¨nh ·∫£nh. Vui l√≤ng th·ª≠ l·∫°i."
    override val errorLoadingConversations = "L·ªói t·∫£i cu·ªôc tr√≤ chuy·ªán"

    // ============================================================================
    // VOICE MESSAGES
    // ============================================================================
    override val audioNotAvailable = "‚ö† √Çm thanh kh√¥ng kh·∫£ d·ª•ng"
    override val playVoiceMessage = "Ph√°t"
    override val pauseVoiceMessage = "T·∫°m d·ª´ng"
    override val resumeVoiceMessage = "Ti·∫øp t·ª•c"

    // ============================================================================
    // FULLSCREEN IMAGE
    // ============================================================================
    override val plantImage = "H√¨nh ·∫£nh c√¢y tr·ªìng"
    override val plantImageFullscreen = "H√¨nh ·∫£nh c√¢y tr·ªìng to√†n m√†n h√¨nh"
    override val healthLabel = "S·ª©c kh·ªèe: "
    override val issuesDetected = " v·∫•n ƒë·ªÅ ph√°t hi·ªán"
    override val imageQualityLabel = "Ch·∫•t l∆∞·ª£ng h√¨nh ·∫£nh: "
    override val noImage = "Kh√¥ng c√≥ h√¨nh ·∫£nh"
    override val cropLabel = "C√¢y tr·ªìng"

    // ============================================================================
    // CONTENT DESCRIPTIONS (for accessibility)
    // ============================================================================
    override val cdSettings = "C√†i ƒë·∫∑t"
    override val cdScrollToBottom = "Cu·ªôn xu·ªëng cu·ªëi"
    override val cdNewConversation = "Cu·ªôc tr√≤ chuy·ªán m·ªõi"
    override val cdDeleteConversation = "X√≥a cu·ªôc tr√≤ chuy·ªán"
    override val cdVoiceInput = "Nh·∫≠p gi·ªçng n√≥i"
    override val cdAttachImage = "ƒê√≠nh k√®m h√¨nh ·∫£nh"
    override val cdCamera = "M√°y ·∫£nh"
    override val cdGallery = "Th∆∞ vi·ªán"
    override val cdSend = "G·ª≠i"
    override val cdBack = "Quay l·∫°i"
    override val cdClose = "ƒê√≥ng"
    override val cdCancel = "H·ªßy"
    override val cdCopy = "Sao ch√©p"
    override val cdShare = "Chia s·∫ª"
    override val cdPlay = "Ph√°t"
    override val cdPause = "T·∫°m d·ª´ng"
    override val cdSelectedPlantImage = "H√¨nh ·∫£nh c√¢y tr·ªìng ƒë√£ ch·ªçn"
    override val cdPlantImageFullscreen = "H√¨nh ·∫£nh c√¢y tr·ªìng to√†n m√†n h√¨nh"
    override val cdCancelRecording = "H·ªßy ghi √¢m"
    override val cdSendRecording = "G·ª≠i b·∫£n ghi"
    override val cdCrop = "C√¢y tr·ªìng"
}

object LocalizationProvider {
    fun getStrings(language: Language): Strings {
        return when (language) {
            Language.ENGLISH -> EnglishStrings
            Language.VIETNAMESE -> VietnameseStrings
        }
    }
}
