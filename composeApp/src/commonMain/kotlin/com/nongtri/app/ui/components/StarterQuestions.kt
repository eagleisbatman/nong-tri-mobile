package com.nongtri.app.ui.components

import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import com.nongtri.app.l10n.Language
import kotlinx.datetime.Clock
import kotlinx.datetime.TimeZone
import kotlinx.datetime.toLocalDateTime

@OptIn(ExperimentalLayoutApi::class, ExperimentalMaterial3Api::class)
@Composable
fun StarterQuestions(
    language: Language,
    locationName: String? = null,
    onQuestionClick: (String) -> Unit,
    modifier: Modifier = Modifier
) {
    val questions = getStarterQuestions(language, locationName)

    Column(
        modifier = modifier
            .fillMaxWidth()
            .padding(horizontal = 16.dp, vertical = 12.dp)
    ) {
        // Section header with icon
        Row(
            verticalAlignment = androidx.compose.ui.Alignment.CenterVertically,
            modifier = Modifier.padding(bottom = 12.dp)
        ) {
            Text(
                text = "üí°",
                style = MaterialTheme.typography.titleMedium,
                modifier = Modifier.padding(end = 8.dp)
            )
            Text(
                text = if (language == Language.VIETNAMESE) {
                    "G·ª£i √Ω c√¢u h·ªèi"
                } else {
                    "Suggested questions"
                },
                style = MaterialTheme.typography.titleMedium,
                fontWeight = FontWeight.SemiBold,
                color = MaterialTheme.colorScheme.onSurface
            )
        }

        FlowRow(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.spacedBy(10.dp),
            verticalArrangement = Arrangement.spacedBy(10.dp)
        ) {
            questions.forEach { question ->
                SuggestionChip(
                    onClick = { onQuestionClick(question) },
                    label = {
                        Text(
                            text = question,
                            style = MaterialTheme.typography.bodyMedium,
                            fontWeight = FontWeight.Medium
                        )
                    },
                    modifier = Modifier
                        .defaultMinSize(minHeight = 40.dp)
                )
            }
        }
    }
}

/**
 * Determines current farming season in Vietnam based on month
 */
private fun getCurrentSeason(): String {
    val now = Clock.System.now().toLocalDateTime(TimeZone.currentSystemDefault())
    val month = now.monthNumber

    return when (month) {
        12, 1, 2 -> "winter"      // ƒê√¥ng: December - February (Winter-Spring crop planting)
        3, 4, 5 -> "spring"        // Xu√¢n: March - May (Spring harvest, Summer-Autumn prep)
        6, 7, 8 -> "summer"        // H·∫°: June - August (Summer-Autumn crop)
        9, 10, 11 -> "autumn"      // Thu: September - November (Autumn harvest, Winter prep)
        else -> "spring"
    }
}

/**
 * Detects if location is coastal region (for aquaculture relevance)
 */
private fun isCoastalRegion(locationName: String?): Boolean {
    if (locationName == null) return false
    val coastal = listOf(
        "ƒë√† n·∫µng", "nha trang", "v≈©ng t√†u", "h·∫£i ph√≤ng", "qu·∫£ng ninh",
        "c·∫ßn th∆°", "c√† mau", "b·∫°c li√™u", "ki√™n giang", "s√≥c trƒÉng",
        "da nang", "nha trang", "vung tau", "hai phong", "quang ninh",
        "can tho", "ca mau", "bac lieu", "kien giang", "soc trang"
    )
    return coastal.any { locationName.lowercase().contains(it) }
}

/**
 * Generates context-aware starter questions based on location and season
 * Note: Location is ALWAYS available (at minimum from IP address)
 */
private fun getStarterQuestions(language: Language, locationName: String?): List<String> {
    val season = getCurrentSeason()
    val isCoastal = isCoastalRegion(locationName)

    return if (language == Language.VIETNAMESE) {
        when (season) {
            "winter" -> listOf(
                "Th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?",
                "M√πa ƒë√¥ng xu√¢n n√™n tr·ªìng c√¢y g√¨?",
                "ChƒÉm s√≥c l√∫a ƒë√¥ng xu√¢n nh∆∞ th·∫ø n√†o?",
                if (isCoastal) "Nu√¥i t√¥m m√πa n√†y c·∫ßn l∆∞u √Ω g√¨?" else "ChƒÉm s√≥c gia s√∫c m√πa ƒë√¥ng"
            )
            "spring" -> listOf(
                "Th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?",
                "Th·ªùi ƒëi·ªÉm thu ho·∫°ch l√∫a xu√¢n?",
                "Chu·∫©n b·ªã v·ª• h√® thu nh∆∞ th·∫ø n√†o?",
                if (isCoastal) "M√πa c√° n√†y ƒë√°nh b·∫Øt g√¨?" else "Ph√≤ng s√¢u b·ªánh m√πa n√≥ng"
            )
            "summer" -> listOf(
                "Th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?",
                "C√¢y tr·ªìng h√® thu ph√π h·ª£p?",
                "Ch·ªëng h·∫°n m√πa kh√¥ th·∫ø n√†o?",
                if (isCoastal) "Nu√¥i th·ªßy s·∫£n m√πa n√†y" else "ChƒÉm s√≥c l√∫a h√® thu"
            )
            "autumn" -> listOf(
                "Th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?",
                "Thu ho·∫°ch l√∫a m√πa nh∆∞ th·∫ø n√†o?",
                "Chu·∫©n b·ªã v·ª• ƒë√¥ng xu√¢n?",
                if (isCoastal) "Th·ªùi v·ª• t√¥m m√πa thu" else "Ph√≤ng b·ªánh gia s√∫c m√πa m∆∞a"
            )
            else -> listOf(
                "Th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?",
                "M√πa n√†y n√™n tr·ªìng c√¢y g√¨?",
                "L·ªãch chƒÉm s√≥c l√∫a?",
                if (isCoastal) "Nu√¥i t√¥m c√° th·∫ø n√†o?" else "ChƒÉm s√≥c gia s√∫c"
            )
        }
    } else {
        when (season) {
            "winter" -> listOf(
                "What's today's weather?",
                "What to plant in winter-spring season?",
                "How to care for winter-spring rice?",
                if (isCoastal) "Shrimp farming tips this season?" else "Livestock care in winter"
            )
            "spring" -> listOf(
                "What's today's weather?",
                "When to harvest spring rice?",
                "How to prepare for summer-autumn crop?",
                if (isCoastal) "Fishing season guidance?" else "Pest control in hot season"
            )
            "summer" -> listOf(
                "What's today's weather?",
                "Suitable summer-autumn crops?",
                "Drought management tips?",
                if (isCoastal) "Aquaculture this season" else "Summer-autumn rice care"
            )
            "autumn" -> listOf(
                "What's today's weather?",
                "How to harvest autumn rice?",
                "Winter crop preparation?",
                if (isCoastal) "Autumn shrimp season" else "Livestock disease prevention in rainy season"
            )
            else -> listOf(
                "What's today's weather?",
                "What crops to plant this season?",
                "Rice care schedule?",
                if (isCoastal) "Shrimp and fish farming?" else "Livestock care tips"
            )
        }
    }
}
